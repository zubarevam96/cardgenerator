# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  server:
    build:
      context: .
    ports:
      - "8080:8080"
    depends_on:
      - db
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/card_generator_db
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./src/main/resources/static:/app/static
      - ./src/main/resources/templates:/app/templates
    develop:
      watch:
        - action: sync
          path: ./src/main/resources/static
          target: /app/static
        - action: sync
          path: ./src/main/resources/templates
          target: /app/templates
  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: card_generator_db
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5431:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", $POSTGRES_USER, "-d", $POSTGRES_DB]
      interval: 30s
      timeout: 5s
      retries: 5
volumes:
  db_data:
